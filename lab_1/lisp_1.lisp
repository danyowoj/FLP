; Компилятор: https://onecompiler.com/commonlisp

; 1. Напишите сложную функцию, используя композиции функций CAR и CDR, которая
; возвращает атом * при применении к следующему списку:
(((1 (2 *)) 3) 4)

(print (car(cdr(car(cdr(car(car '(((1 (2 *)) 3) 4))))))))
; --------------------------------------------------------------------------------------------------
; 2. Объясните работу функций:
(cons nil nil)

; Функция (cons nil nil) создает новую пустую ячейку списка.
;     * Функция cons - это базовая функция LISP, которая создает новую ячейку списка. Она     принимает два аргумента: первый элемент и остальную часть списка.
;     * В данном случае, первый аргумент функции cons - это nil, что означает пустой список.
;     * Второй аргумент функции cons - также nil, что означает пустой список.
;
; Таким образом, функция (cons nil nil) возвращает (nil).
; --------------------------------------------------------------------------------------------------
; 3. Из атомов 1, 2, 3, nil создайте указанные списки двумя способами:

; а) с помощью композиций функций CONS;
(print(cons 2(cons 3 nil))) ; out = (2 3)
(print(cons (cons 2 (cons 3 nil)) nil)) ; out = ((2 3))
(print (cons 1 (cons (cons 2 (cons 3 nil)) nil))) ; out = (1 (2 3))

; б) с помощью композиций функций LIST.
(print (list 2 3)) ; out = (2 3)
(print (list 1 (list 2 3))) ; out = (1 (2 3))
; --------------------------------------------------------------------------------------------------