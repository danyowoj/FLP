; Определите предикат, проверяющий равенство двух множеств.

(defun equal-sets (set1 set2)
  (cond
  ; Базовый случай: если оба множества пусты, то они равны, поэтому возвращаем t.
    ((and (null set1) (null set2)) t)
  
  ; Если одно из множеств пусто, а другое - нет, то они не равны, поэтому возвращаем nil.
    ((or (null set1) (null set2)) nil) 
  
  ; Если первый элемент первого множества присутствует во втором множестве, 
    ((member (car set1) set2) 
  ; то мы рекурсивно вызываем функцию, передавая хвост первого множества и второе множество, из которого мы удалили этот элемент.
     (equal-sets (cdr set1) (remove (car set1) set2))) 
  
  ; Если первый элемент первого множества не присутствует во втором множестве, то множества не равны, поэтому возвращаем nil.
    (t nil))) 

(print (equal-sets '(1 2 3) '(3 2 1)))
; => t

(print (equal-sets '(1 2 3) '(1 2 4)))
; => nil
